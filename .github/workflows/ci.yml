name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend
        
    strategy:
      matrix:
        node-version: [16.x, 18.x]
        
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./backend/package-lock.json
    - run: npm ci
    - run: npm run lint --if-present
    - run: npm test --if-present

  frontend-tests:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
        
    strategy:
      matrix:
        node-version: [16.x, 18.x]
        
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json
    - run: npm ci
    - run: npm run lint --if-present
    - run: npm test --if-present
    - run: npm run build --if-present

  # Opsiyonel: Deploy işi, sadece main branch için çalışır
  deploy:
    needs: [backend-tests, frontend-tests]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy
      run: echo "Deployment would happen here"
      # Gerçek deployment kodları burada olacak
      # Örneğin:
      # - name: Deploy to server
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     script: |
      #       cd /path/to/project
      #       git pull
      #       cd backend && npm install && npm run build
      #       cd ../frontend && npm install && npm run build
      #       pm2 restart all
